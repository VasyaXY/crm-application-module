{if empty($series)}
    <div class="well-lg well">
        No data available.
    </div>
{/if}

<div id="graph_{$graphId}" class="contains-chart graph line-graph" data-gchart="drawChart{$graphId|noescape}" style="height:{$height}px;"></div>

{var $serieTable = []}
{var $serieCount = count($series)}
{var $j = 1}

{foreach $series as $key => $serie}
    {var $i = 0}
    {foreach $serie as $row}
        {var $serieTable[$i][$j] = $row}
        {var $i += 1}
    {/foreach}
    {var $j += 1}
{/foreach}

{var $dataTable = []}
{var $dateCount = count($xAxis)}

{for $i=0; $i < $dateCount; $i++}
    {var $elements = [$xAxis[$i]] + $serieTable[$i]}
    {var $dataTable[$i] = implode(',', $elements)}
{/for}

{var $dataTableJS = '[' . implode('],[', $dataTable) . ']'}

<script type="text/javascript">

function drawChart{$graphId|noescape}() {

    var data = google.visualization.arrayToDataTable
    ([
        ['Day',{foreach $series as $k => $v}{$k}{sep},{/sep}{/foreach}], {$dataTableJS|noescape}
    ]);

    var chart = new google.visualization.LineChart(document.getElementById('graph_{$graphId|noescape}'));

    var columns = [];
    var series = {};
    for (var i = 0; i < data.getNumberOfColumns(); i++) {
        columns.push(i);
        if (i > 0) {
            series[i - 1] = {};
        }
    }

    var options = {
        chartArea: { width: '90%', height: '70%'},
        fontSize: ['11'],
        lineWidth: 3,
        series: series,
        legend: { position:'top', maxLines: 2},
        trendlines: {
          0: { type: 'linear', opacity: 0.5, tooltip: false },
          1: { type: 'linear', opacity: 0.5, tooltip: false }
        }
    };

    google.visualization.events.addListener(chart, 'select', function () {
        var sel = chart.getSelection();
        // if selection length is 0, we deselected an element
        if (sel.length > 0) {
            // if row is undefined, we clicked on the legend
            if (sel[0].row === null) {
                var col = sel[0].column;
                if (columns[col] == col) {
                    // hide the data series
                    columns[col] = {
                        label: data.getColumnLabel(col),
                        type: data.getColumnType(col),
                        calc: function () {
                            return null;
                        }
                    };
                    delete options.trendlines[col - 1];

                    // grey out the legend entry
                    series[col - 1].color = '#CCCCCC';
                }
                else {
                    // show the data series
                    columns[col] = col;
                    series[col - 1].color = null;
                    options.trendlines[col - 1] = { type: 'linear', opacity: 0.5 };
                }
                var view = new google.visualization.DataView(data);
                view.setColumns(columns);
                chart.draw(view, options);
            }
        }
    });

    chart.draw(data, options);
}

{if !empty($series)}
    {if (!$redraw || google.visualization != undefined) }
        google.charts.load('current', { packages: ['corechart'] });
        google.charts.setOnLoadCallback(drawChart{$graphId|noescape});
    {else}
        drawChart{$graphId|noescape}();
    {/if}
{/if}

</script>
