services:
	emitter: League\Event\Emitter

	environmentConfig: Crm\ApplicationModule\EnvironmentConfig

	moduleManager:
		class: Crm\ApplicationModule\ModuleManager
		setup:
			- addModule(Crm\ApplicationModule\ApplicationModule(), 1)

	applicationManager:
		class: Crm\ApplicationModule\ApplicationManager
		setup:
			- initialize

	frontendMenu:
		class: Crm\ApplicationModule\Components\FrontendMenu

	# Latte filters
	nette.latteFactory:
		setup:
			- addFilter(null, [@filterLoader, 'load'])

	filterLoader:
		class: Crm\ApplicationModule\Helpers\FilterLoader
		setup:
			- register('activeLabel', [Crm\ApplicationModule\Helpers\ActiveLabelHelper(), process])
			- register('diff', [Crm\ApplicationModule\Helpers\DiffHelper(), process])
			- register('helpIcon', [Crm\ApplicationModule\Helpers\HelpIconHelper(), process])
			- register('userDate', [Crm\ApplicationModule\Helpers\UserDateHelper(), process])
			- register('yesNo', [Crm\ApplicationModule\Helpers\YesNoHelper(), process])
			- register('price', [Crm\ApplicationModule\Helpers\PriceHelper(), process])

	- Crm\ApplicationModule\Router\RouterFactory
	router: @Crm\ApplicationModule\Router\RouterFactory::createRouter

	- Crm\ApplicationModule\Authenticator\AuthenticatorManager
	- Crm\ApplicationModule\Widget\WidgetManager
	- Crm\ApplicationModule\DataProvider\DataProviderManager
	- Crm\ApplicationModule\Builder\ConfigBuilder
	- Crm\ApplicationModule\Config\Repository\ConfigCategoriesRepository
	- Crm\ApplicationModule\Config\Repository\ConfigsRepository
	- Crm\ApplicationModule\Commands\DatabaseSeedCommand
	- Crm\ApplicationModule\Commands\CacheCommand
	- Crm\ApplicationModule\Cache\CacheRepository
	applicationConfig:
		class:  Crm\ApplicationModule\Config\ApplicationConfig
	- Crm\ApplicationModule\Snippet\Repository\SnippetsRepository
	- Crm\ApplicationModule\Snippet\Control\SnippetFactory
	- Crm\ApplicationModule\Snippet\SnippetRenderer
	- Crm\ApplicationModule\Components\FrontendMenuFactoryInterface
	- Crm\ApplicationModule\Components\SimpleWidgetFactoryInterface
	- Crm\ApplicationModule\Components\SingleStatWidgetFactoryInterface
	- Crm\ApplicationModule\Criteria\CriteriaStorage
	- Crm\ApplicationModule\Criteria\ScenariosCriteriaStorage
	- Crm\ApplicationModule\Event\EventsStorage
	- Crm\ApplicationModule\ExcelFactory
	- Crm\ApplicationModule\CleanUpManager
	- Crm\ApplicationModule\LayoutManager
	- Crm\ApplicationModule\SeederManager
	- Crm\ApplicationModule\Repository\HermesTasksRepository
	- Crm\ApplicationModule\Repository\AuditLogRepository
	- Crm\ApplicationModule\Commands\HermesWorkerCommand
	- Crm\ApplicationModule\Commands\CleanupCommand
	- Crm\ApplicationModule\Config\ConfigsCache(%redis.host%, %redis.port%)
	- Crm\ApplicationModule\Helpers\PriceHelper
	- Crm\ApplicationModule\Helpers\UserDateHelper

	graph_data: Crm\ApplicationModule\Graphs\GraphData
	- Crm\ApplicationModule\Graphs\ScaleFactory
	- Crm\ApplicationModule\Event\RedisEventManager(%redis.host%, %redis.port%)
	- Crm\ApplicationModule\User\UserDataRegistrator
	- Crm\ApplicationModule\Api\UserDataHandler
	- Crm\ApplicationModule\Api\EventsListApiHandler
	- Crm\ApplicationModule\User\UserData
	- Crm\ApplicationModule\User\DownloadUserData
	- Crm\ApplicationModule\User\DeleteUserData
	- Crm\ApplicationModule\User\RedisUserDataStorage(%redis.host%, %redis.port%)
	- Crm\ApplicationModule\Events\RefreshUserDataTokenHandler
	- Crm\ApplicationModule\Events\NewAccessTokenHandler
	- Crm\ApplicationModule\Events\RemovedAccessTokenHandler

	- Crm\ApplicationModule\Seeders\CalendarSeeder
	- Crm\ApplicationModule\Seeders\ConfigsSeeder
	- Crm\ApplicationModule\Seeders\CountriesSeeder
	- Crm\ApplicationModule\Seeders\SnippetsSeeder
	accessManager: Crm\ApplicationModule\Access\AccessManager

	hermesLogFilter: Crm\ApplicationModule\Hermes\LogFilter
	hermesLogger:
		class: Monolog\Logger('hermes-logger')
		setup:
			- pushProcessor(@hermesLogFilter::add(['password', 'token']))
			- pushHandler(Monolog\Handler\StreamHandler("%appDir%/../log/hermes-log.txt"))

	hermesRestart: Tomaj\Hermes\Restart\SharedFileRestart('/tmp/hermes_restart')
	hermesDriver: Crm\ApplicationModule\Hermes\RedisDriver
	hermesDispatcher:
		class: Tomaj\Hermes\Dispatcher(@hermesDriver, @hermesLogger, @hermesRestart)
	hermesEmitter:
		class: Tomaj\Hermes\Emitter(@hermesDriver, @hermesLogger)
	- Crm\ApplicationModule\Hermes\HermesTasksQueue(%redis.host%, %redis.port%)

	# components factories
	- Crm\ApplicationModule\Components\Graphs\GoogleBarGraphControlFactoryInterface
	- Crm\ApplicationModule\Components\Graphs\GoogleBarGraphGroupControlFactoryInterface
	- Crm\ApplicationModule\Components\Graphs\GoogleLineGraphControlFactoryInterface
	- Crm\ApplicationModule\Components\Graphs\GoogleLineGraphGroupControlFactoryInterface
	- Crm\ApplicationModule\Components\Graphs\SmallBarGraphControlFactoryInterface
	- Crm\ApplicationModule\Components\Graphs\InlineBarGraphControlFactoryInterface
	- Crm\ApplicationModule\Components\Graphs\GoogleSankeyGraphGroupControlFactoryInterface
